generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model News {
  id        String   @id @default(cuid())
  src       String
  title     String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Showcase {
  id        String   @id @default(cuid())
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        String   @id @default(cuid())
  image     String
  name      String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id        String   @id @default(cuid())
  type      String
  title     String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relation to blog content
  blog      Blog?
  
  @@map("projects")
}

model Blog {
  id         String   @id @default(cuid())
  projectId  String   @unique
  paragraphs String[] // Array of paragraph text
  images     String[] // Array of image URLs
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relation to project
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@map("blogs")
}

model Project2 {
  id        String   @id @default(cuid())
  title     String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relation to blog2 content
  blog2      Blog2?
  
  @@map("projects2")
}

model Blog2 {
  id         String   @id @default(cuid())
  projectId  String   @unique
  paragraphs String[] // Array of paragraph text
  images     String[] // Array of image URLs
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relation to project2
  project2    Project2  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@map("blogs2")
}